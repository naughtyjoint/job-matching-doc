openapi: 3.0.1
info:
  title: 工作媒合平台
  version: 1.0.0
servers:
 - url: https://findjob.lemaxim.tw/
tags:
  - name: 會員
  - name: 公司
  - name: 履歷
  - name: 工作
  - name: 招募
  - name: 面試
  - name: 任務
  - name: 評論
  - name: 申訴
  - name: 訊息
  - name: 其他
paths:
  #user
  /v1/user/login:
    post:
      tags:
        - 會員
      summary: 會員登入
      description: 會員登入輸入帳號密碼取得token
      operationId: userLogin
      requestBody:
        description: 登入資訊
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        type: object
                        properties:
                          token:
                            type: string
                        required:
                          - token
        401:
          description: 登入失敗
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: login failed
                  res:
                    type: object
                    nullable: true
                    example: null
                required:
                  - msg
                  - res
  /v1/user/create:
    post:
      tags:
        - 會員
      summary: 新增會員
      operationId: addUser
      requestBody:
        description: 會員資訊
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/User'
                - type: object
                  properties:
                    password:
                      type: string
                      format: password
                      description: 登入密碼
                  required:
                    - password
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        type: object
                        allOf:
                          - $ref: '#/components/schemas/User'
                          - type: object
                            properties:
                              id:
                                type: integer
                                description: 會員編號
        422:
          description: 欄位錯誤
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequest'     
  /v1/user/info:
    get:
      tags:
        - 會員
      summary: 取得自身會員資訊
      operationId: getUserInfo
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        allOf:
                          - type: object
                            properties:
                              id:
                                type: integer
                                description: 會員編號
                          - $ref: '#/components/schemas/FullUser'
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
      security:
        - api_key: []
  /v1/user/info/{user_id}:
    get:
      tags:
        - 會員
      summary: 透過會員id取得會員資訊
      operationId: getUserInfoById
      parameters:
        - $ref: '#/components/parameters/userIdParam'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        allOf:
                          - type: object
                            properties:
                              id:
                                type: integer
                                description: 會員編號
                          - $ref: '#/components/schemas/FullUser'
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
      security:
        - api_key: []
  /v1/user/update:
    post:
      tags:
        - 會員
      summary: 更新會員資訊
      operationId: updateUser
      requestBody:
        description: 會員資訊
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        type: object
                        allOf:
                          - $ref: '#/components/schemas/FullUser'
                          - type: object
                            properties:
                              id:
                                type: integer
                                description: 會員編號
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
      security:
        - api_key: []
  /v1/user/{user_id}:
    delete:
      tags:
        - 會員
      summary: 刪除會員
      operationId: deleteUser
      parameters:
        - $ref: '#/components/parameters/userIdParam'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        type: boolean
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
      security:
        - api_key: []
  /v1/user/image:
    post:
      tags:
        - 會員
      summary: 上傳會員頭像
      operationId: updateUserImage
      description: 可重複上傳，舊的會蓋過新的
      requestBody:
        description: 會員資訊
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: 圖片檔案
              required:
                - image
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        type: object
                        allOf:
                          - $ref: '#/components/schemas/FullUser'
                          - $ref: '#/components/schemas/ModelTimestamp'
                          - type: object
                            properties:
                              id:
                                type: integer
                                description: 會員編號
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
      security:
        - api_key: []
    delete:
      tags:
        - 會員
      summary: 刪除會員頭像
      operationId: deleteUserImage
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                msg: success
                res: null
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
      security:
        - api_key: []
  
  /v1/user/recommend:
    get:
      tags:
        - 會員
      summary: 推薦求職者
      operationId: getUserRecommend
      parameters:
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        allOf:
                          - $ref: '#/components/schemas/PageResponse'
                          - type: object
                            properties:
                              data:
                                type: array
                                items:
                                  allOf:
                                    - type: object
                                      properties:
                                        id:
                                          type: integer
                                          description: 會員編號
                                      required:
                                        - id
                                    - $ref: '#/components/schemas/FullUser'
                                    - $ref: '#/components/schemas/ModelTimestamp'
                            required:
                              - data
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
      security:
        - api_key: []
  /v1/search/users:
    get:
      tags:
        - 會員
      summary: 取得所有會員資訊
      operationId: getAllUserInfo
      parameters:
        - $ref: '#/components/parameters/keywordParam'
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        allOf:
                          - $ref: '#/components/schemas/PageResponse'
                          - type: object
                            properties:
                              data:
                                type: array
                                items:
                                  allOf:
                                    - type: object
                                      properties:
                                        id:
                                          type: integer
                                          description: 會員編號
                                    - $ref: '#/components/schemas/FullUser'
                            required:
                              - data
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
      security:
        - api_key: []

  #resumes
  /v1/user/resumes:
    get:
      tags:
        - 履歷
      summary: 取得自己的所有履歷列表
      operationId: getUserResumes
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        type: object
                        properties:
                          data:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                  description: 履歷名稱
                                id:
                                  type: integer
                                  description: 履歷id
                              required:
                                - name
                                - id
                        required:
                          - data
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
      security:
        - api_key: []
  /v1/user/resumes/{user_id}:
    get:
      tags:
        - 履歷
      summary: 取得會員所有履歷列表
      operationId: getUserResumesById
      parameters:
        - $ref: "#/components/parameters/userIdParam"
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        type: object
                        properties:
                          data:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                  description: 履歷名稱
                                id:
                                  type: integer
                                  description: 履歷id
                              required:
                                - name
                                - id
                        required:
                          - data
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
      security:
        - api_key: []
  /v1/user/resume/{resume_id}:
    get:
      tags:
        - 履歷
      summary: 取得履歷內容資訊
      operationId: getUserResumeById
      parameters:
        - $ref: '#/components/parameters/resumeIdParam'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        allOf:
                          - type: object
                            properties:
                              user_id:
                                type: integer
                                description: 會員編號
                          - $ref: '#/components/schemas/UserResume'
                          - $ref: '#/components/schemas/ModelTimestamp'
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
        403:
          $ref: '#/components/responses/PermissionDenied'
      security:
        - api_key: []
    delete:
      tags:
        - 履歷
      summary: 刪除履歷
      operationId: deleteResume
      parameters:
        - $ref: '#/components/parameters/resumeIdParam'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        type: boolean
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
        403:
          $ref: '#/components/responses/PermissionDenied'
      security:
        - api_key: []
  /v1/user/resume/create:
    post:
      tags:
        - 履歷
      summary: 新增會員履歷資料
      operationId: createUserResume
      requestBody:
        description: 會員詳細資料
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserResume'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        allOf:
                          - type: object
                            properties:
                              id:
                                type: integer
                                description: 履歷編號
                              user_id:
                                type: integer
                                description: 會員編號
                            required:
                              - id
                              - user_id
                          - $ref: '#/components/schemas/UserResume'
                          - $ref: '#/components/schemas/ModelTimestamp'
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
      security:
        - api_key: []
  /v1/user/resume/{resume_id}/update:
    post:
      tags:
        - 履歷
      summary: 更新會員履歷資料
      operationId: updateUserResume
      parameters:
        - $ref: '#/components/parameters/resumeIdParam'
      requestBody:
        description: 會員詳細資料
        content:
          application/json:
            schema:  
              $ref: '#/components/schemas/UserResume'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        allOf:
                          - type: object
                            properties:
                              user_id:
                                type: integer
                                description: 會員編號
                          - $ref: '#/components/schemas/UserResume'
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
        403:
          $ref: '#/components/responses/PermissionDenied'
      security:
        - api_key: []
  /v1/user/resume/{resume_id}/files:
    get:
      tags:
        - 履歷
      summary: 取得履歷附件
      operationId: getResumeFiles
      parameters:
        - $ref: '#/components/parameters/resumeIdParam'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        type: object
                        properties:
                          data:
                            type: array
                            minimum: 0
                            items:
                              $ref: '#/components/schemas/ResumeFile'
                        required:
                          - data
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
        404:
          description: 找不到資源
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                msg: resume not found
                res: null
      security:
        - api_key: []
    post:
      tags:
        - 履歷
      summary: 上傳履歷附件
      operationId: uploadResumeFiles
      parameters:
        - $ref: '#/components/parameters/resumeIdParam'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                images:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: 圖片檔案
                files:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: 文件檔案
                links:
                  type: array
                  items:
                    type: string
                  description: 網站連結
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        type: array
                        items:
                          $ref: '#/components/schemas/ResumeFile'
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
        404:
          description: 找不到資源
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                msg: resume not found
                res: null
      security:
        - api_key: []
  /v1/user/resume/file/{file_id}:
    delete:
      tags:
        - 履歷
      summary: 刪除履歷附件
      operationId: deleteResumeFileById
      parameters:
        - name: file_id
          in: path
          description: 履歷附件id
          required: true
          schema:
            type: integer
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                msg: success
                res: null
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
        404:
          description: 找不到資源
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                msg: file not found
                res: null
      security:
        - api_key: []

  #company
  /v1/company/info:
    get:
      tags:
        - 公司
      summary: 取得自身公司資訊
      operationId: getUserCompanyInfo
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        allOf:
                          - type: object
                            properties:
                              id:
                                type: integer
                                description: 公司編號
                            required:
                              - id
                              - avatar
                              - fax
                              - website
                              - contact_time
                              - others
                              - description
                              - benefit
                              - remark
                          - $ref: '#/components/schemas/Company'
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
        404:
          description: 找不到資源
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                msg: company not found
                res: null
      security:
        - api_key: []
  /v1/company/info/{user_id}:
    get:
      tags:
        - 公司
      summary: 取得公開公司資訊
      operationId: getUserCompanyInfoByUid
      parameters:
        - $ref: '#/components/parameters/userIdParam'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        allOf:
                          - type: object
                            properties:
                              id:
                                type: integer
                                description: 公司編號
                            required:
                              - id
                              - avatar
                              - fax
                              - website
                              - contact_time
                              - others
                              - description
                              - benefit
                              - remark
                          - $ref: '#/components/schemas/Company'
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
        404:
          description: 找不到資源
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                msg: company not found
                res: null
      security:
        - api_key: []
  /v1/company/update:
    post:
      tags:
        - 公司
      summary: 更新公司資訊
      operationId: updateCompany
      requestBody:
        description: 公司資訊
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        allOf:
                          - type: object
                            properties:
                              id:
                                type: integer
                                description: 公司編號
                            required:
                              - id
                              - avatar
                              - fax
                              - website
                              - contact_time
                              - others
                              - description
                              - benefit
                              - remark
                          - $ref: '#/components/schemas/Company'
                          - $ref: '#/components/schemas/ModelTimestamp'
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
      security:
        - api_key: []
  /v1/company/avatar:
    post:
      tags:
        - 公司
      summary: 上傳公司頭像
      operationId: updateCompanyAvatar
      description: 可重複上傳，舊的會蓋過新的
      requestBody:
        description: 公司資訊
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: 圖片檔案
              required:
                - image
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        type: object
                        allOf:
                          - type: object
                            properties:
                              id:
                                type: integer
                                description: 公司編號
                            required:
                              - id
                              - avatar
                              - fax
                              - website
                              - contact_time
                              - others
                              - description
                              - remark
                          - $ref: '#/components/schemas/Company'
                          - $ref: '#/components/schemas/ModelTimestamp'
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
      security:
        - api_key: []
    delete:
      tags:
        - 公司
      summary: 刪除公司頭像
      operationId: deleteCompanyAvatar
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                msg: success
                res: null
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
      security:
        - api_key: []
  /v1/company/{company_id}/environment/images:
    get:
      tags:
        - 公司
      summary: 取得公司環境圖片
      operationId: getCompanyImagesBy
      parameters:
        - $ref: '#/components/parameters/companyIdParam'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        type: object
                        properties:
                          data:
                            type: array
                            minimum: 0
                            items:
                              $ref: '#/components/schemas/CompanyImage'
                        required:
                          - data
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
        404:
          description: 找不到資源
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                msg: company not found
                res: null
      security:
        - api_key: []
    post:
      tags:
        - 公司
      summary: 上傳公司環境圖片
      operationId: uploadCompanyImages
      parameters:
        - $ref: '#/components/parameters/companyIdParam'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                images:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: 圖片檔案
              required:
                - images
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        type: array
                        items:
                          $ref: '#/components/schemas/CompanyImage'
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
        404:
          description: 找不到資源
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                msg: company not found
                res: null
      security:
        - api_key: []
  /v1/company/environment/image/{image_id}:
    delete:
      tags:
        - 公司
      summary: 刪除指定公司環境圖片
      operationId: deleteCompanyImageById
      parameters:
        - name: image_id
          in: path
          description: 公司環境照id
          required: true
          schema:
            type: integer
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                msg: success
                res: null
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
        404:
          description: 找不到資源
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                msg: image not found
                res: null
      security:
        - api_key: []
  /v1/company/{company_id}/attachments:
    get:
      tags:
        - 公司
      summary: 取得公司附件
      operationId: getCompanyAttachs
      parameters:
        - $ref: '#/components/parameters/companyIdParam'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        type: object
                        properties:
                          data:
                            type: array
                            minimum: 0
                            items:
                              $ref: '#/components/schemas/CompanyAttachment'
                        required:
                          - data
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
        404:
          description: 找不到資源
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                msg: company not found
                res: null
      security:
        - api_key: []
    post:
      tags:
        - 公司
      summary: 上傳公司附件
      operationId: uploadCompanyAttachs
      parameters:
        - $ref: '#/components/parameters/companyIdParam'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                images:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: 圖片檔案
                files:
                  type: array
                  items:
                    type: string
                    format: binary
                  description: 文件檔案
                links:
                  type: array
                  items:
                    type: string
                  description: 網站連結
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        type: array
                        items:
                          $ref: '#/components/schemas/CompanyAttachment'
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
        404:
          description: 找不到資源
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                msg: company not found
                res: null
      security:
        - api_key: []
  /v1/company/attachment/{attachment_id}:
    delete:
      tags:
        - 公司
      summary: 刪除公司附件
      operationId: deleteCompanyAttachById
      parameters:
        - name: attachment_id
          in: path
          description: 公司附件id
          required: true
          schema:
            type: integer
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                msg: success
                res: null
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
        404:
          description: 找不到資源
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                msg: attachment not found
                res: null
      security:
        - api_key: []

  #job
  /v1/jobs:
    get:
      tags:
        - 工作
      summary: 取得自己的所有工作資料
      operationId: getOwnJobslist
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        type: object
                        properties:
                          data:
                            type: array
                            items:
                              allOf:
                                - type: object
                                  properties:
                                    id:
                                      type: integer
                                      description: 工作案件編號
                                  required:
                                    - id
                                - $ref: "#/components/schemas/Job"
                        required:
                          - data
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
      security:
        - api_key: []
  /v1/jobs/{user_id}:
    get:
      tags:
        - 工作
      summary: 取得會員所有工作資料
      operationId: getJobslistByUserId
      parameters:
        - $ref: "#/components/parameters/userIdParam"
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        type: object
                        properties:
                          data:
                            type: array
                            items:
                              allOf:
                                - type: object
                                  properties:
                                    id:
                                      type: integer
                                      description: 工作案件編號
                                  required:
                                    - id
                                - $ref: "#/components/schemas/Job"
                        required:
                          - data
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
      security:
        - api_key: []
  /v1/job/info/{job_id}:
    get:
      tags:
        - 工作
      summary: 取得案件資訊
      operationId: getJobInfo
      parameters:
        - $ref: '#/components/parameters/jobIdParam'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        allOf:
                          - type: object
                            properties:
                              id:
                                type: integer
                                description: 工作編號
                              user_id:
                                type: integer
                                description: 業主編號
                              corp_id:
                                type: integer
                                description: 公司編號
                                nullable: true
                            required:
                              - id
                              - user_id
                              - corp_id
                          - $ref: '#/components/schemas/Job'
                          - type: object
                            properties:
                              detail:
                                $ref: '#/components/schemas/JobDetail'
                            required:
                              - detail
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
      security:
        - api_key: []
  /v1/job/create:
    post:
      tags:
        - 工作
      summary: 新增工作
      operationId: addJob
      requestBody:
        description: 工作資訊
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/JobReqBody'
                - type: object
                  properties:
                    detail:
                      $ref: '#/components/schemas/JobDetail'
                  required:
                    - detail
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        type: object
                        allOf:
                          - $ref: '#/components/schemas/Job'
                          - $ref: '#/components/schemas/ModelTimestamp'
                          - type: object
                            properties:
                              id:
                                type: integer
                                description: 工作編號
                            required:
                              - id
                          - type: object
                            properties:
                              detail:
                                $ref: '#/components/schemas/JobDetail'
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
      security:
        - api_key: []
  /v1/job/update/{job_id}:
    post:
      tags:
        - 工作
      summary: 更新工作資料
      operationId: updateJob
      parameters:
        - $ref: '#/components/parameters/jobIdParam'
      requestBody:
        description: 更新工作資訊
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/JobReqBody'
                - type: object
                  properties:
                    detail:
                      $ref: '#/components/schemas/JobDetail'
                  required:
                    - detail
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        type: object
                        allOf:
                          - $ref: '#/components/schemas/Job'
                          - $ref: '#/components/schemas/ModelTimestamp'
                          - type: object
                            properties:
                              id:
                                type: integer
                                description: 工作編號
                            required:
                              - id
                          - type: object
                            properties:
                              detail:
                                $ref: '#/components/schemas/JobDetail'
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
        404:
          description: 無相關工作
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                msg: job not found
                res: null
      security:
        - api_key: []
  /v1/job/recommend:
    get:
      tags:
        - 工作
      summary: 推薦工作案件
      operationId: getJobRecommend
      parameters:
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        allOf:
                          - $ref: '#/components/schemas/PageResponse'
                          - type: object
                            properties:
                              data:
                                type: array
                                items:
                                  allOf:
                                    - type: object
                                      properties:
                                        id:
                                          type: integer
                                          description: 工作編號
                                      required:
                                        - id
                                    - $ref: '#/components/schemas/Job'
                            required:
                              - data
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
      security:
        - api_key: []
  /v1/search/jobs:
    get:
      tags:
        - 工作
      summary: 工作案件關鍵字搜尋
      operationId: getJobSearch
      parameters:
        - $ref: '#/components/parameters/keywordParam'
        - $ref: '#/components/parameters/pageParam'
        - $ref: '#/components/parameters/limitParam'
        - name: area
          in: query
          description: 區域
          schema:
            type: string
        - name: wage_type
          in: query
          description: 薪資類型
          schema:
            type: string
        - name: wage_min
          in: query
          description: 薪資下限
          schema:
            type: integer
        - name: wage_max
          in: query
          description: 薪資上限
          schema:
            type: integer
        - name: ind_codes
          in: query
          description: 產業類別
          schema:
            type: integer
        - name: rating
          in: query
          description: 評分大於等於
          schema:
            type: integer
            minimum: 1
            maximum: 5
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        allOf:
                          - $ref: '#/components/schemas/PageResponse'
                          - type: object
                            properties:
                              data:
                                type: array
                                items:
                                  allOf:
                                    - type: object
                                      properties:
                                        id:
                                          type: integer
                                          description: 工作編號
                                      required:
                                        - id
                                    - $ref: '#/components/schemas/Job'
                                    - $ref: '#/components/schemas/ModelTimestamp'
                            required:
                              - data
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
      security:
        - api_key: []

  #recruitment
  /v1/recruitment/{recruitment_id}:
    get:
      tags:
        - 招募
      summary: 查看招募資訊
      operationId: recruitmentInfo
      parameters:
        - $ref: '#/components/parameters/recruitmentIdParam'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        allOf:
                          - $ref: '#/components/schemas/Recruitment'
                          - $ref: '#/components/schemas/ModelTimestamp'
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
        404:
          description: 無相關招募
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                msg: recruitment not found
                res: null
      security:
        - api_key: []
  /v1/recruitments:
    get:
      tags:
        - 招募
      summary: 查看相關招募清單
      operationId: recruitmentList
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        type: object
                        properties:
                          data:
                            type: array
                            items:
                              allOf:
                                - $ref: '#/components/schemas/Recruitment'
                                - $ref: '#/components/schemas/ModelTimestamp'
                        required:
                          - data
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
      security:
        - api_key: []
  /v1/recruitment/create:
    post:
      tags:
        - 招募
      summary: 新增招募清單
      operationId: createRecruitment
      requestBody:
        description: 招募資訊
        content:
          application/json:
            schema:
              allOf:
                - type: object
                  properties:
                    user_id:
                      type: integer
                      description: 目標使用者ID(只有在type為1時需要)
                - $ref: '#/components/schemas/RecruitmentReqBody'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        allOf:
                          - $ref: '#/components/schemas/Recruitment'
                          - $ref: '#/components/schemas/ModelTimestamp'
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
      security:
        - api_key: []
  /v1/recruitment/update/{recruitment_id}:
    post:
      tags:
        - 招募
      summary: 更新招募狀態
      operationId: updateRecruitment
      parameters:
        - $ref: '#/components/parameters/recruitmentIdParam'
      requestBody:
        description: 招募狀態
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: integer
                  description: 招募狀態（1：讀取，2：婉拒，3：接受）
              required:
                - status
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        allOf:
                          - $ref: '#/components/schemas/Recruitment'
                          - $ref: '#/components/schemas/ModelTimestamp'
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
        404:
          description: 無相關招募
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                msg: recruitment not found
                res: null
      security:
        - api_key: []
  
  #interview
  /v1/interview/{interview_id}:
    get:
      tags:
        - 面試
      summary: 查看相關面試資訊
      operationId: interviewInfo
      parameters:
        - $ref: '#/components/parameters/interviewIdParam'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        allOf:
                          - $ref: '#/components/schemas/Interview'
                          - $ref: '#/components/schemas/ModelTimestamp'
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
        404:
          description: 無相關面試資料
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                msg: interview not found
                res: null
      security:
        - api_key: []
  /v1/interviews:
    get:
      tags:
        - 面試
      summary: 查看相關面試清單
      operationId: interviewList
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        type: object
                        properties:
                          data:
                            type: array
                            items:
                              allOf:
                                - $ref: '#/components/schemas/Interview'
                                - $ref: '#/components/schemas/ModelTimestamp'
                        required:
                          - data
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
      security:
        - api_key: []
  /v1/interview/create:
    post:
      tags:
        - 面試
      summary: 業主新增面試
      operationId: createInterview
      requestBody:
        description: 面試資訊
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InterviewReqBody'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        allOf:
                          - $ref: '#/components/schemas/Interview'
                          - $ref: '#/components/schemas/ModelTimestamp'
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
      security:
        - api_key: []
  /v1/interview/update/{interview_id}:
    post:
      tags:
        - 面試
      summary: 更新面試資訊
      operationId: updateRecruitment
      parameters:
        - $ref: '#/components/parameters/interviewIdParam'
      requestBody:
        description: 面試修改資訊
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: integer
                  description: 面試狀態（1：婉拒邀請，2：接受邀請）
                calendar:
                  type: boolean
                  description: 是否加入行事曆
              required:
                - status
                - calendar
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        allOf:
                          - $ref: '#/components/schemas/Interview'
                          - $ref: '#/components/schemas/ModelTimestamp'
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
        404:
          description: 無相關面試資料
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                msg: interview not found
                res: null
      security:
        - api_key: []

  #task
  /v1/task/{task_id}:
    get:
      tags:
        - 任務
      summary: 取得工作任務內容
      description: 取得工作任務內容
      operationId: getTaskInfo
      parameters:
        - $ref: "#/components/parameters/taskIdParam"
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        allOf:
                          - $ref: '#/components/schemas/FullTask'
                          - $ref: '#/components/schemas/ModelTimestamp'
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
        404:
          description: 無相關任務資料
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                msg: task not found
                res: null
      security:
        - api_key: []
  /v1/tasks:
    get:
      tags:
        - 任務
      summary: 查看相關工作任務清單
      operationId: taskList
      parameters:
        - $ref: "#/components/parameters/checkoutParam"
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        type: object
                        properties:
                          data:
                            type: array
                            items:
                              allOf:
                                - $ref: '#/components/schemas/FullTask'
                                - $ref: '#/components/schemas/ModelTimestamp'
                        required:
                          - data
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
      security:
        - api_key: []
  /v1/tasks/{user_id}:
    get:
      tags:
        - 任務
      summary: 查看相關工作任務清單，指定對方使用者ID
      description: 此API會列出所有你與指定使用者的所有任務資料
      operationId: taskUserList
      parameters:
        - $ref: "#/components/parameters/checkoutParam"
        - $ref: "#/components/parameters/userIdParam"
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        type: object
                        properties:
                          data:
                            type: array
                            items:
                              allOf:
                                - $ref: '#/components/schemas/FullTask'
                                - $ref: '#/components/schemas/ModelTimestamp'
                        required:
                          - data
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
      security:
        - api_key: []
  /v1/task/create:
    post:
      tags:
        - 任務
      summary: 排定工作任務
      description: 排定工作任務
      operationId: createTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        type: object
                        properties:
                          data:
                            allOf:
                              - $ref: '#/components/schemas/Task'
                              - $ref: '#/components/schemas/ModelTimestamp'
                              - type: object
                                properties:
                                  id:
                                    type: integer
                                    description: 任務編號
                                required:
                                  - id
                        required:
                          - data
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
      security:
        - api_key: []
  /v1/task/{task_id}/update:
    post:
      tags:
        - 任務
      summary: 更新工作任務內容
      description: 更新工作任務內容
      operationId: updateTask
      parameters:
        - $ref: "#/components/parameters/taskIdParam"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: integer
                  description: "任務狀態 0: 等待答覆, 1: 拒絕邀約, 2: 已接受, 3: 已完成"
                fee:
                  type: integer
                  description: "任務結算狀態 0: 未收取, 1: 已收取/結清"
                pay_way:
                  type: integer
                  description: "任務給薪方式 0: 現金支付, 1: 轉上支付"
                memo:
                  type: string
                  description: 任務備註
              required:
                - status
                - fee
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        allOf:
                          - $ref: '#/components/schemas/FullTask'
                          - $ref: '#/components/schemas/ModelTimestamp'
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
        404:
          description: 無相關任務資料
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                msg: task not found
                res: null
      security:
        - api_key: []
  /v1/task/{task_id}/punch/{action}:
    get:
      tags:
        - 任務
      summary: 任務上下工打卡
      operationId: taskPunchTime
      parameters:
          - $ref: "#/components/parameters/taskIdParam"
          - name: action
            in: path
            description: 打卡動作（in：上工，out：下工）
            required: true
            schema:
              type: string
              enum: [in, out]
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        type: object
                        properties:
                          data:
                            type: array
                            items:
                              allOf:
                                - $ref: '#/components/schemas/FullTask'
                                - $ref: '#/components/schemas/ModelTimestamp'
                        required:
                          - data
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
        403:
          description: 打卡失敗，時間錯誤
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                msg: 'punch time error'
                res: null
      security:
        - api_key: []
  /v1/task/re-punch:
    post:
      tags:
        - 任務
      summary: 補打卡
      description: 任務補打卡（只有雇主可呼叫）
      operationId: taskRePunch
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                task_id:
                  type: integer
                  description: "任務編號"
                  example: 30
                data:
                  type: array
                  items:
                    type: object
                    properties:
                      action:
                        type: string
                        description: "補上班in/補下班out"
                        example: "in"
                      adjust_time:
                        type: string
                        description: "補打卡時間"
                        example: "2023-08-01 10:00:00"
                    required:
                      - action
                      - adjust_time
              required:
                - task_id
                - data
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        allOf:
                          - $ref: '#/components/schemas/FullTask'
                          - $ref: '#/components/schemas/ModelTimestamp'
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
        404:
          description: 無相關任務資料
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                msg: task not found
                res: null
      security:
        - api_key: []  
  /v1/task/{task_id}/checkout/preview:
    get:
      tags:
        - 任務
      summary: 任務薪資預算
      description: 預覽指定工作任務與其相關任務薪資結算
      operationId: taskCheckoutPre
      parameters:
        - $ref: "#/components/parameters/taskIdParam"
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        $ref: '#/components/schemas/TaskPreCheckoutSum'
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
        404:
          description: 無相關任務資料
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                msg: task not found
                res: null
      security:
        - api_key: []
  /v1/task/checkout:
    post:
      tags:
        - 任務
      summary: 任務薪資結算
      description: 結算指定工作任務薪資
      operationId: taskCheckout
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                task_id:
                  type: integer
                  description: "任務狀態 0: 等待答覆, 1: 拒絕邀約, 2: 已接受, 3: 已完成"
                day_type:
                  type: integer
                  description: "工作日型態（加班費計算用）1: 休息日, 2: 例假日、休假日、國定假日"
                pay_way:
                  type: integer
                  description: "任務給薪方式 0: 現金支付, 1: 轉上支付"
              required:
                - task_id
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        $ref: '#/components/schemas/TaskCheckoutSum'
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
        404:
          description: 無相關任務資料
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                msg: task not found
                res: null
      security:
        - api_key: []

  #comment
  /v1/comments:
    get:
      tags:
        - 評論
      summary: 取得自己的所有評論列表
      operationId: getUserComments
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        type: object
                        properties:
                          data:
                            type: array
                            items:
                              allOf:
                                - $ref: '#/components/schemas/Comment'
                                - type: object
                                  properties:
                                    id:
                                      type: integer
                                      description: 評論編號
                                  required:
                                    - id
                                    - content
                                    - pictures
                                - $ref: '#/components/schemas/ModelTimestamp'
                        required:
                          - data
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
      security:
        - api_key: []
  /v1/comments/{user_id}:
    get:
      tags:
        - 評論
      summary: 取得使用者的所有評論列表
      operationId: getCommentsByUid
      parameters:
        - $ref: '#/components/parameters/userIdParam'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        type: object
                        properties:
                          data:
                            type: array
                            items:
                              allOf:
                                - $ref: '#/components/schemas/Comment'
                                - type: object
                                  properties:
                                    id:
                                      type: integer
                                      description: 評論編號
                                  required:
                                    - id
                                    - content
                                    - pictures
                                - $ref: '#/components/schemas/ModelTimestamp'
                        required:
                          - data
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
      security:
        - api_key: []
  /v1/comment/create:
    post:
      tags:
        - 評論
      summary: 新增評論
      operationId: createComment
      requestBody:
        content:
          multipart/form-data:
            schema:
              allOf:
                - $ref: '#/components/schemas/Comment'
                - type: object
                  properties:
                    pictures:
                      type: array
                      description: 評論照片檔案
                      items:
                        type: string
                        format: binary
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        allOf:
                          - $ref: '#/components/schemas/Comment'
                          - type: object
                            properties:
                              id:
                                type: integer
                                description: 評論編號
                            required:
                              - id
                              - content
                              - pictures
                          - $ref: '#/components/schemas/ModelTimestamp'
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
      security:
        - api_key: []

  #complaint
  /v1/complaint/create:
    post:
      tags:
        - 申訴
      summary: 新增申訴事件
      operationId: createComplaint
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                task_id:
                  type: integer
                content:
                  type: string
                img:
                  type: string
                  format: binary
                video:
                  type: string
                  format: binary
                audio:
                  type: string
                  format: binary
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - api_key: []

  #message
  /v1/chat/message/rooms:
    get:
      tags:
        - 訊息
      summary: 取得訊息聊天室列表
      operationId: getChatRoomList
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        type: object
                        nullable: false
                        properties:
                          data:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  description: 聊天室id
                                user_id:
                                  type: integer
                                  description: 對方user id
                                updated_at:
                                  type: string
                                  description: 最後更新時間
                              required:
                                - id
                                - user_id
                                - updated_at
                        required:
                          - data
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
      security:
        - api_key: []
  /v1/chat/message/room/{user_id}:
    get:
      tags:
        - 訊息
      summary: 取得訊息room id
      operationId: getChatRoomId
      parameters:
        - $ref: '#/components/parameters/userIdParam'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        type: object
                        nullable: false
                        properties:
                          data:
                            type: integer
                            description: 訊息room id
                        required:
                          - data
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
        404:
          description: 無相關會員訊息room id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                msg: chat room not found
                res: null
      security:
        - api_key: []
  /v1/chat/messages/{room_id}:
    get:
      tags:
        - 訊息
      summary: 取得訊息紀錄
      operationId: getMessageRecordsByRoomId
      parameters:
        - $ref: '#/components/parameters/roomIdParam'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        type: object
                        properties:
                          data:
                            type: array
                            items:
                              allOf:
                                - $ref: '#/components/schemas/ChatMessage'
                                - $ref: '#/components/schemas/ModelTimestamp'
                                
                        required:
                          - data
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
        404:
          description: 找不到會員訊息room id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                msg: chat room not found
                res: null
      security:
        - api_key: []
  /v1/chat/message/{user_id}:
    post:
      tags:
        - 訊息
      summary: 傳送訊息
      operationId: postChatMessage
      description: 注意，user_id parameter為接收者id
      parameters:
        - $ref: '#/components/parameters/userIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestChatMsg'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        type: object
                        properties:
                          data:
                            allOf:
                              - $ref: '#/components/schemas/ChatMessage'
                              - $ref: '#/components/schemas/ModelTimestamp'
                        required:
                          - data
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
        404:
          description: 找不到會員
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                msg: user not found
                res: null
      security:
        - api_key: []
  /v1/chat/broadcasting/auth:
    post:
      tags:
        - 訊息
      summary: 驗證私人頻道訂閱權限
      operationId: chatBroadcastAuth
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                socket_id:
                  type: string
                channel_name:
                  type: string
              required:
                - socket_id
                - channel_name
      responses:
        200:
          description: successful operation
          content:
            application/json: {}
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
      security:
        - api_key: []

  #common
  /v1/common/industries:
    get:
      tags:
        - 其他
      summary: 查看產業類別清單
      operationId: industriesList
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        type: object
                        description: 主類別編碼群組（此為範例數字）
                        properties:
                          100000:
                            type: object
                            description: 副類別編碼群組（此為範例數字）
                            properties:
                              000100:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    code:
                                      type: string
                                      description: 主類別編碼
                                      example: 100000
                                    min_code:
                                      type: string
                                      description: 副類別編碼
                                      example: 000100
                                    sub_code:
                                      type: string
                                      description: 子類別編碼
                                      example: 100101
                                    ind_name:
                                      type: string
                                      description: 主類別名稱
                                    ind_min_name:
                                      type: string
                                      description: 副類別名稱
                                    op_name:
                                      type: string
                                      description: 子類別名稱
                                  required:
                                    - code
                                    - min_code
                                    - sub_code
                                    - ind_name
                                    - ind_min_name
                                    - op_name
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
      security:
        - api_key: []
  /v1/common/certificates:
    get:
      tags:
        - 其他
      summary: 查看證照類別清單
      operationId: certificatesList
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        type: object
                        description: 主類別編碼群組（此為範例數字）
                        properties:
                          100000:
                            type: object
                            description: 副類別編碼群組（此為範例數字）
                            properties:
                              000100:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    code:
                                      type: string
                                      description: 主類別編碼
                                      example: 100000
                                    min_code:
                                      type: string
                                      description: 副類別編碼
                                      example: 000100
                                    sub_code:
                                      type: string
                                      description: 子類別編碼
                                      example: 100101
                                    maj_name:
                                      type: string
                                      description: 主類別名稱
                                    min_name:
                                      type: string
                                      description: 副類別名稱
                                    cert_name:
                                      type: string
                                      description: 子類別名稱
                                  required:
                                    - code
                                    - min_code
                                    - sub_code
                                    - maj_name
                                    - min_name
                                    - cert_name
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
      security:
        - api_key: []
  /v1/common/tools:
    get:
      tags:
        - 其他
      summary: 查看工具類別清單
      operationId: toolsList
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        type: object
                        description: 主類別編碼群組（此為範例數字）
                        properties:
                          100000:
                            type: object
                            description: 副類別編碼群組（此為範例數字）
                            properties:
                              000100:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    code:
                                      type: string
                                      description: 主類別編碼
                                      example: 100000
                                    min_code:
                                      type: string
                                      description: 副類別編碼
                                      example: 000100
                                    sub_code:
                                      type: string
                                      description: 子類別編碼
                                      example: 100101
                                    maj_name:
                                      type: string
                                      description: 主類別名稱
                                    min_name:
                                      type: string
                                      description: 副類別名稱
                                    tool_name:
                                      type: string
                                      description: 子類別名稱
                                  required:
                                    - code
                                    - min_code
                                    - sub_code
                                    - maj_name
                                    - min_name
                                    - tool_name
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
      security:
        - api_key: []
  /v1/common/skills:
    get:
      tags:
        - 其他
      summary: 查看技能類別清單
      operationId: skillsList
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      res:
                        type: object
                        description: 主類別編碼群組（此為範例數字）
                        properties:
                          100000:
                            type: object
                            description: 副類別編碼群組（此為範例數字）
                            properties:
                              000100:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    code:
                                      type: string
                                      description: 主類別編碼
                                      example: 100000
                                    min_code:
                                      type: string
                                      description: 副類別編碼
                                      example: 000100
                                    sub_code:
                                      type: string
                                      description: 子類別編碼
                                      example: 100101
                                    maj_name:
                                      type: string
                                      description: 主類別名稱
                                    min_name:
                                      type: string
                                      description: 副類別名稱
                                    skill_name:
                                      type: string
                                      description: 子類別名稱
                                  required:
                                    - code
                                    - min_code
                                    - sub_code
                                    - maj_name
                                    - min_name
                                    - skill_name
        401:
          $ref: '#/components/responses/TokenUnauthenticated'
      security:
        - api_key: []
  
components:
  parameters:
    pageParam:
      name: page
      in: query
      description: 頁數(預設為1)
      schema:
        type: integer
    limitParam:
      name: limit
      in: query
      description: 單頁筆數(預設為10)
      schema:
        type: integer
    userIdParam:
      name: user_id
      in: path
      description: 會員id
      required: true
      schema:
        type: integer
    userIdQryParam:
      name: user_id
      in: query
      description: 會員id
      required: true
      schema:
        type: integer
    jobIdParam:
      name: job_id
      in: path
      description: 工作案件id
      required: true
      schema:
        type: integer
    recruitmentIdParam:
      name: recruitment_id
      in: path
      description: 招募物件id
      required: true
      schema:
        type: integer
    interviewIdParam:
      name: interview_id
      in: path
      description: 面試物件id
      required: true
      schema:
        type: integer
    taskIdParam:
      name: task_id
      in: path
      description: 工作任務id
      required: true
      schema:
        type: integer
    roomIdParam:
      name: room_id
      in: path
      description: 訊息room id
      required: true
      schema:
        type: integer
    resumeIdParam:
      name: resume_id
      in: path
      description: 履歷id
      required: true
      schema:
        type: integer
    keywordParam:
      name: keyword
      in: query
      description: 關鍵字
      schema:
        type: string
    checkoutParam:
      name: checkout
      in: query
      description: 結清判斷，帶 true 或 false
      schema:
        type: string
    companyIdParam:
      name: company_id
      in: path
      required: true
      description: 公司id
      schema:
        type: integer

  responses:
    TokenUnauthenticated:
      description: token無效
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnauthenticatedRes'
    PermissionDenied:
      description: 無操作權限
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiResponse'
          example:
            msg: permission denied
            res: null

  schemas:
    ApiResponse:
      type: object
      properties:
        msg:
          type: string
          example: success
        res:
          type: object
          nullable: true
      required:
        - msg
        - res
    UnauthenticatedRes:
      type: object
      properties:
        message:
          type: string
          example: Unauthenticated.
    User:
      type: object
      properties:
        name:
          type: string
          description: 姓名
        en_name:
          type: string
          description: 英文名
          nullable: true
        sex:
          type: integer
          description: 性別(0:女 1:男)
          enum: [0, 1]
        birthday:
          type: string
          format: date
          description: 生日
        marital_status:
          type: integer
          description: "婚姻狀態（0: 未婚 1: 已婚 2: 離婚 3: 喪偶）"
        phone:
          type: object
          description: 電話號碼
          properties:
            phone_1:
              type: string
            phone_2:
              type: string
            phone_3:
              type: string
          required:
            - phone_1
        special_id:
          type: integer
          description: 特殊身分
        email:
          type: string
          format: email
          description: 信箱
        contact_time:
          type: object
          description: 聯絡時間
          nullable: true
        education:
          $ref: '#/components/schemas/Education'
        skills:
          type: array
          description: 技能
          items:
            type: string
        mug_shot_img:
          type: string
          description: 大頭貼
        address:
          type: string
          description: 地址
        public_info:
          type: object
          description: 公開資訊
        public_contact_info:
          type: object
          description: 公開聯絡資訊
        privacy_setting:
          type: object
          properties:
            job_match:
              type: boolean
              description: 是否公開自動配動
            match_inform:
              type: boolean
              description: 是否開啟配對通知
            public_profile:
              type: boolean
              description: 是否公開會員資料
            resumes:
              type: boolean
              description: 是否公開履歷資料
            jobs:
              type: boolean
              description: 是否公開工作資料
          required:
            - job_match
            - match_inform
            - public_profile
            - resumes
            - jobs
          description: 隱私設定資訊
      required:
        - id
        - name
        - sex
        - birthday
        - marital_status
        - phone
        - special_id
        - email
        - education
        - skills
        - mug_shot_img
        - address
        - public_info
        - public_contact_info
        - privacy_setting
    FullUser:
      allOf:
        - $ref: '#/components/schemas/User'
        - type: object
          properties:
            last_login:
              type: string
              format: date-time
              description: 最後登入時間
    UserResume:
      type: object
      properties:
        name:
          type: string
          description: 履歷名稱
        status:
          type: integer
          description: "狀態（0：關閉，1：開啟)"
        experiences:
          type: array
          items:
            $ref: '#/components/schemas/Experience'
          description: 經歷
        educations:
          type: array
          items:
            $ref: '#/components/schemas/Education'
          description: 學歷
        lang_skills:
          type: array
          description: 外語能力
          items:
            $ref: '#/components/schemas/LangSkill'
        certificates:
          type: array
          description: 證照列表
          items:
            $ref: '#/components/schemas/Certificate'
        skills:
          type: array
          description: 技能
          items:
            type: string
      required:
        - status
        - experiences
        - education
        - lang_skill
        - certificates
        - skills
    ResumeFile:
      type: object
      properties:
        id:
          type: integer
          description: 履歷附件id
        file_path:
          type: string
          description: 附件位置
          nullable: true
        link:
          type: string
          description: 連結
          nullable: true
        type:
          type: string
          description: 附件類型(1. 圖片，2. 檔案，3. 連結)
      required:
        - id
        - file_path
        - link
        - type
    Experience:
      type: object
      properties:
        position:
          type: string
          description: 經歷職務名稱
        company:
          type: string
          description: 經歷公司名稱
        type:
          type: integer
          description: "經歷工作類別 (0: 全職, 1:兼職, 2:實習)"
        title:
          type: array
          items:
            type: string
          description:  經歷工作職稱
        management:
          type: integer
          description: "經歷管理責任 (0: 10人以下, 1: 10人以上, 2: 30人以上 3:50 人以上 4: 100人以上)"
        tenure:
          type: object
          properties:
            started_at:
              type: string
            ended_at:
              type: string
          description: 任期
        content:
          type: string
          description: 經歷內容
      required:
        - position
        - company
        - type
        - title
        - management
        - tenure
        - content
    Education:
      type: object
      description: 教育背景
      properties:
        school:
          type: string
          description: 學校名稱
        status:
          type: integer
          description: 狀態 (0:畢業, 1:肄業, 2:就學中)
        department:
          type: string
          description: 科系
        degree:
          type: integer
          description: 學位 (0:高中職, 1:專科, 2:學士, 3:碩士, 4:博士)
      required:
        - school
        - status
        - department
        - degree
    LangSkill:
      type: object
      properties:
        lang:
          type: string
          description: 語言
        l:
          type: integer
          description: 聽力能力
        s:
          type: integer
          description: 口說能力
        r:
          type: integer
          description: 閱讀能力
        w:
          type: integer
          description: 寫作能力
      required:
        - lang
        - l
        - s
        - r
        - w
    Certificate:
      type: object
      properties:
        code:
          type: integer
          description: 類別代號
        type:
          type: string
          nullable: true
          description: 證書類別
        name:
          type: string
          nullable: true
          description: 證書名稱
      required:
        - code
        - type
        - name
    Company:
      type: object
      properties:
        name:
          type: string
          description: 公司名稱
        avatar:
          type: string
          description: 公司頭像
          nullable: true
        industry:
          type: string
          description: 公司類型
        members:
          type: integer
          description: 公司人數
        contact:
          type: string
          description: 公司聯絡人
        phone:
          type: string
          description: 公司聯絡電話
        fax:
          type: string
          description: 公司傳真
          nullable: true
        email:
          type: string
          description: 公司電子信箱
        address:
          type: string
          description: 公司地址
        website:
          type: string
          description: 公司網站
          nullable: true
        contact_time:
          type: string
          description: 公司聯絡時段
          nullable: true
        others:
          type: array
          description: 公司標籤
          nullable: true
          items:
            type: string
        description:
          type: string
          description: 公司簡介
          nullable: true
        benefit:
          type: string
          description: 公司福利
          nullable: true
        remark:
          type: string
          description: 公司備註
          nullable: true
      required:
        - name
        - members
        - industry
        - contact
        - phone
        - email
        - address
    CompanyImage:
      type: object
      properties:
        id:
          type: integer
          description: 公司環境照id
        image_path:
          type: string
          description: 照片位置
      required:
        - id
        - image_path
    CompanyAttachment:
      type: object
      properties:
        id:
          type: integer
          description: 公司附件id
        attachment_path:
          type: string
          description: 附件位置
          nullable: true
        link:
          type: string
          description: 連結
          nullable: true
        type:
          type: string
          description: 附件類型(1. 圖片，2. 檔案，3. 連結)
      required:
        - id
        - attachment_path
        - link
        - type
    JobReqBody:
      type: object
      properties:
        status:
          type: integer
          description: "案件狀態（0: 關閉, 1: 開啟）"
        name:
          type: string
          description: 案件名稱
        type:
          type: integer
          description: "案件類型（0：全職, 1：兼職, 2：實習）"
        industry:
          type: array
          description: 產業列表
          items:
            type: integer
        insurance:
          type: boolean
          description: 健保
        demand_amount:
          type: integer
          description: 需求人數
        seniority:
          type: integer
          description: 工作年資
        address:
          type: string
          description: 案件所在地址
        country:
          type: integer
          description: 縣市代碼
        district:
          type: integer
          description: 行政區代碼
        working:
          type: object
          description: 工作時間
          properties:
            type:
              type: integer
              description: 工作計時型態（1:單次,2:數次）
            workday:
              type: array
              description: 工作日設定，working.type為2時需要
              minimum: 1
              items:
                type: string
                description: 星期縮寫 Mon、Tue、Wed、Thu、Fri、Sat、Sun
            sho_rest_day:
              type: string
              description: 指定休息日，格式為星期縮寫 Mon、Tue、Wed、Thu、Fri、Sat、Sun，不可與例假日重複
            li_rest_day:
              type: string
              description: 指定例假日，格式為星期縮寫 Mon、Tue、Wed、Thu、Fri、Sat、Sun，不可與休息日重複
            start_date:
              type: string
              description: 起始日期
            start_time:
              type: string
              description: 結束日期
            end_date:
              type: string
              description: 上班時間
            end_time:
              type: string
              description: 下班時間
          required:
            - type
        description:
          type: string
          description: 案件內容敘述
        wage:
          type: object
          description: 案件薪酬
          properties:
            type:
              type: integer
              description: "薪酬種類（1：時薪，2：月薪，3：一次給薪）"
            amount:
              type: integer
              description: 薪資
            checkout_cycle:
              type: integer
              description: "結算總類（1：單次，2：週期（指定第幾日），3：週期（指定星期幾））"
            checkout_date:
              type: array
              nullable: true
              description: "結算日（checkout_cycle為2或3時設定）"
              items:
                type: integer
                description: 星期幾或每月第幾日
          required:
            - type
            - amount
            - checkout_cycle
            - checkout_date
        tags:
          type: array
          description: 標籤
          items:
            type: string
      required:
        - status
        - name
        - type
        - industry
        - insurance
        - demand_amount
        - seniority
        - address
        - working
        - description
        - wage
        - tags
    JobDetail:
      type: object
      properties:
        educations:
          type: array
          description: 學歷需求
          items:
            type: object
            properties:
              department:
                type: string
                description: 科系
              degree:
                type: integer
                description: 學位 (0:高中職, 1:專科, 2:學士, 3:碩士, 4:博士)
            required:
              - department
              - degree
        certificates:
          type: array
          description: 證照需求
          items:
            $ref: '#/components/schemas/Certificate'
        lang_skills:
          type: array
          description: 語言需求
          items:
            $ref: '#/components/schemas/LangSkill'
        environments:
          type: array
          description: 環境
          items:
            type: object
            properties:
              name:
                type: string
                description: 環境名稱
              path:
                type: string
                description: 檔案路徑
            required:
              - name
              - path
        skills:
          type: array
          description: 技能需求
          items:
            type: string
        other_demand:
          description: 其他需求
          type: string
      required:
        - educations
        - certificates
        - lang_skills
        - environments
        - skills
        - other_demand
    Job:
      allOf:
        - type: object
          properties:
            user_id:
              type: integer
              description: 會員編號
            corp_id:
              type: integer
              description: 公司編號
              nullable: true
            rating:
              type: number
              format: float
              description: 評分
          required:
            - rating
            - user_id
            - corp_id
        - $ref: '#/components/schemas/JobReqBody'
    Task:
      type: object
      properties:
        job_id:
          type: integer
          description: 工作編號
        user_id:
          type: integer
          description: 求職者編號
        wage:
          type: integer
          description: 薪資
        memo:
          type: string
          description: 任務備註
      required:
        - job_id
        - user_id
        - wage
        - memo
    FullTask:
      allOf:
        - $ref: '#/components/schemas/Task'
        - type: object
          properties:
            id:
              type: integer
              description: 任務編號
            status:
              type: integer
              description: '任務狀態 0: 等待答覆, 1: 拒絕邀約, 2: 已接受, 3: 已完成'
            fee:
              type: integer
              description: '任務結算狀態 0: 未收取, 1: 已收取/結清'
            pay_way:
              type: integer
              description: '任務給薪方式 0: 現金支付, 1: 轉上支付'
            start_at:
              type: string
              description: 任務開始時間
            end_at:
              type: string
              description: 任務結束時間
            punch_in:
              type: string
              description: '打工上工時間紀錄'
            punch_out:
              type: string
              description: '打工下工時間紀錄'
            checkout_wage:
              type: integer
              nullable: true
              description: '結帳金額'
            manual_punch:
              type: array
              description: '手動補打卡資訊'
              items:
                type: object
                properties:
                  action:
                    type: string
                    description: 補打卡類型(in/out)
                  time:
                    type: string
                    description: 新打卡時間
                  updated_at:
                    type: string
                    description: 補打卡執行時間
                required:
                  - action
                  - time
                  - updated_at
              nullable: true
          required:
            - id
            - status
            - fee
            - pay_way
            - start_at
            - end_at
            - punch_in
            - punch_out
            - checkout_wage
            - manual_punch
    TaskCheckoutSum:
      type: object
      properties:
        total_tasks:
          type: integer
          description: 結算任務總數
        total_wage:
          type: integer
          description: 總本薪
        total_ot_pay:
          type: integer
          description: 總加班費
        total_ot_time:
          type: integer
          description: 總加班時長
        total_sum:
          type: integer
          description: 結算總薪資
        data:
          type: array
          items:
            $ref: '#/components/schemas/TaskCheckoutCal'
      required:
        - total_tasks
        - total_wage
        - total_ot_pay
        - total_ot_time
        - total_sum
        - data
    TaskPreCheckoutSum:
      allOf:
        - $ref: '#/components/schemas/TaskCheckoutSum'
        - type: object
          properties:
            total_default_wage:
              type: integer
              description: 總預設薪資
            data:
              type: array
              items:
                $ref: '#/components/schemas/TaskPreCheckoutCal'
          required:
            - total_default_wage
            - data
    TaskCheckoutCal:
      type: object
      properties:
        task_id:
          type: integer
          description: 任務編號
        wage:
          type: integer
          description: 本薪
          example: 1000
        ot_pay:
          type: integer
          description: 加班費
          example: 0
        ot_time:
          type: integer
          description: 加班時間
          example: 0
        total:
          type: integer
          description: 總薪資
          example: 1000
        formula:
          type: object
          properties:
            wage:
              type: string
              example: (200 * 5)
            ot_pay:
              type: string
              example: ""
          required:
            - wage
            - ot_pay
        punch_in:
          type: string
          description: 打卡上班時間
          example: '2023-05-31 08:00:00'
          nullable: true
        punch_out:
          type: string
          description: 打卡下班時間
          example: '2023-05-31 13:00:00'
          nullable: true
        start_at:
          type: string
          description: 任務預設開始時間
          example: '2023-05-31 08:00:00'
        end_at:
          type: string
          description: 任務預設結束時間
          example: '2023-05-31 12:00:00'
        day_type:
          type: integer
          description: 任務日類型（0：平日，1：休息日，2：例假日）
      required:
        - task_id
        - wage
        - ot_pay
        - ot_time
        - total
        - formula
        - punch_in
        - punch_out
        - start_at
        - end_at
    TaskPreCheckoutCal:
      allOf:
        - $ref: '#/components/schemas/TaskCheckoutCal'
        - type: object
          properties:
            default_wage:
              type: integer
              description: 預設薪資
              example: 800
            formula:
              type: object
              properties:
                wage:
                  type: string
                  example: (200 * 5)
                ot_pay:
                  type: string
                  example: ""
                default_wage:
                  type: string
                  example: (200 * 4)
              required:
                - wage
                - ot_pay
                - default_wage
          required:
            - default_wage
            - formula
    Recruitment:
      allOf:
        - type: object
          properties:
            id:
              type: integer
              description: 招募編號
            user_id:
              type: integer
              description: 對象會員編號
            status:
              type: integer
              description: 招募狀態（0：一般，1：讀取，2：婉拒，3：接受）
          required:
            - id
            - user_id
            - status
        - $ref: '#/components/schemas/RecruitmentReqBody'
    RecruitmentReqBody:
      type: object
      properties:
        job_id:
          type: integer
          description: 對應工作案件編號
        type:
          type: integer
          description: 招募種類（0：求職方-勞工應徵，1：招募方-業主徵才）
      required:
        - job_id
        - type
    Interview:
      allOf:
        - type: object
          properties:
            id:
              type: integer
              description: 面試編號
            status:
              type: integer
              description: 面試狀態（0：等待答覆，1：婉拒邀請，2：接受邀請）
          required:
            - id
            - status
        - $ref: '#/components/schemas/InterviewReqBody'
    InterviewReqBody:
      type: object
      properties:
        user_id:
          type: integer
          description: 求職者會員編號
        job_id:
          type: integer
          description: 工作編號
        interview_time:
          type: string
          description: 面試時間
        address:
          type: string
          description: 面試地點
        description:
          type: string
          description: 面試說明
        calendar:
          type: boolean
          description: 是否加入行事曆
      required:
        - user_id
        - job_id
        - interview_time
        - address
        - description
        - calendar
    Comment:
      properties:
        task_id:
          type: integer
          description: 任務編號
        user_id:
          type: integer
          description: 評論人編號
        type:
          type: integer
          description: '0 會員身分(勞工), 1 公司(業主)'
        score:
          type: number
          format: float
          minimum: 0
          maximum: 5
          description: '評論分數 0 ~ 5, step: 0.5'
        content:
          type: string
          description: 評論內容
          nullable: true
        pictures:
          type: array
          description: 評論照片路徑
          items:
            type: string
      required:
        - task_id
        - user_id
        - type
        - score
    ChatMessage:
      allOf:
        - type: object
          properties:
            id:
              type: integer
              description: 訊息Id
            user_id:
              type: integer
              description: 發送者Id
            chat_room_id:
              type: integer
              description: 訊息Room Id
          required:
            - id
            - user_id
            - chat_room_id
        - $ref: '#/components/schemas/RequestChatMsg'
    RequestChatMsg:
      type: object
      properties:
        event_type:
          type: integer
          description: 訊息類別(0：聊天訊息，1：案件(任務)，2：應徵職缺，3：邀約職缺，4：面試邀請，5：收取費用，6：系統文字訊息)
        event_id:
          type: integer
          description: 對應物件Id
        message:
          type: string
          description: 訊息內文
          nullable: true
      required:
        - event_type
        - event_id
        - message
    InvalidRequest:
      type: object
      properties:
        message:
          type: string
        errors:
          type: object
      required:
        - message
        - errors
    ModelTimestamp:
      type: object
      properties:
        created_at:
          type: string
        updated_at:
          type: string
      required:
        - created_at
        - updated_at
    PageResponse:
      type: object
      properties:
        total:
          type: integer
          description: 總筆數
        lastPage:
          type: integer
          description: 總頁數
      required:
        - total
        - lastPage
    
  securitySchemes:
    api_key:
      type: http
      scheme: bearer
      bearerFormat: JWT